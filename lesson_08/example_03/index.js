console.log("welcom to JS");

//let const обьявляем переменые
let x // обьявляем переменную
x = "word" // переопределяем и назначаем значение
x = "another word" // если обьявляем переменную через let есть возможность переписать значение

// console.log(x)

const fruit = "orange" // обязательно нужно инитиализировать значение , не можем оставить переменную без значения
//fruit = 'pear' // переопределить больше нельзя

x = 42; //JS динамически типизируемый язык, это значит что вы не можете перезначать в переменные данные другого типа
console.log(x);


//Просто пример
console.log(1 + 1);

//! конкатенация - сложение строк в одну
console.log('1' + 1);// console 11




//*Преобразование типов

//1. Преобразование в строку 
//неявное 
let s2 = 5 + ""
console.log(s2, '-это:', typeof s2); //5 -это: string


// явное 
let s3 = String(false) // превратили булевое значение в строку
console.log(typeof s3)


// 2. преобразования в числа

//неявное (превратим  строку в  число )
let s4 = +'42' //превратим в неявное число.
console.log(typeof s4);

//!
//с оператором вычитания мы строку к числу(number)
let s7 = 5 - ''
console.log(s7, typeof s7)

// явное

let s5 = Number('777')
console.log(typeof s5)

// ессли Number() встретит непревращаемые в число символы
//он выведет NaN
// let s5 = Number('777hrfhrth') так работать не будет
// console.log(typeof s5)


// parseInt() будет превращать в число символы пока не встретит непревращаемый
let s6 = parseInt('999usd')
console.log(s6)

//!typeScrit это оболочка над JavaScript которая делает его строготипизированным

//3. Логическое преобразование

// число в boolean
let l5 = Boolean(0) // 0 будет равен false
console.log(15)

let l6 = Boolean(+5)  // положительные числа это будет true
console.log(15)

let l7 = Boolean(-5) // отрицательные также true
console.log(15)

let l8 = Boolean(NaN) // NaN в булевом значении будет false
console.log(l8);

// Операторы:
//-арифметические
let l9 = 12 + 48 // + сложение
let l10 = 10 - 2 // - вычитание
let l11 = 4 * 8 // * умножение
let l12 = 8 / 2 // / деление
let l13 = 9 % 4 // % остаток от целочисленного деления
console.log(l13)
let l14 = 9 ** 3 // ** возведение в степень

//- операторы сравнения
// < ,>, <=, >=
//coertion - неявное преобразование типок при сравнение

// == двойным равно можно сравнить строку и число не приводя до этого к одному типу данных приводя 
// ленивое равенство чтобы не приводить строку к числу
//!например мы хотим сравнивать числа если хотим получить какоето интересное значение
console.log(9 == '9'); // == - это равенство с преведение типов
// строка 9 преобразуется к числу js будет сравнивать числа

//=== - это строгое

console.log(9 === '9') // falce без приведения типов
console.log(9 !== '9') // true  знак неравенства !=

console.log(99 + +'1') //!100  
// +'1' преобразует в число + 99

console.log((2 + 2) ** 3)//64
//() значение в скобках дает больший приоритет содержимому вычесление в скобках будет первое
console.log(2 + 2 ** 3)//10


console.log('99' + 9 - 5)//994/ сравнить строку и число
//сначало 9 преобразуется в строку после 999 в число


